{"version":3,"sources":["svgs/reload.svg","list/phyxList.js","svgs/checkMark.svg","svgs/close.svg","components/Task.js","components/TaskForm.js","components/RoomForm.js","App.js","index.js"],"names":["_g","_defs","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgReload","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","clipPath","d","transform","ForwardRef","Matter","use","MatterAttractors","PhyxList","initPhysics","domTasks","bodies","engine","Engine","create","positionIterations","velocityIterations","ground","Bodies","rectangle","isStatic","friction","collisionFilter","group","mask","groundLower","rightWall","leftWall","completedAttractor","circle","plugin","attractors","bodyA","bodyB","Detector","canCollide","x","position","y","completedCollider","Events","on","time","timing","timestamp","Body","translate","Math","sin","cos","Composite","add","world","setupWorld","mouseObj","Mouse","document","querySelector","mouse","scale","Vector","setScale","mouseConstraint","MouseConstraint","constraint","angularStiffness","stiffness","damping","render","visible","addEventListener","e","button","window","preventDefault","setupMouse","update","forEach","task","bodyDom","body","some","PhysBody","style","floor","offsetWidth","offsetHeight","angle","toFixed","requestAnimationFrame","onload","refreshTasks","setupTasks","runner","Runner","run","querySelectorAll","clear","isCompleted","getAttribute","innerWidth","innerHeight","oldVerts","vertices","map","vert","category","frictionAir","force","random","completedVerts","density","frictionStatic","push","renderScaleX","renderScaleY","min","_path","SvgCheckMark","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SvgClose","Task","classNames","useState","hue","randomColor","data-id","data-iscompleted","className","onClick","deleteTask","background","onMouseDown","updateTask","name","description","TaskForm","setTask","handleChange","value","pervState","onSubmit","addTask","required","type","maxLength","autoComplete","onChange","RoomForm","nanoid","roomKey","setRoomKey","submitAvalible","setSubmitAvalible","downloadRoomTasks","ident","startsWith","slice","disabled","App","taskData","tasks","setTasks","newTask","setNewTask","isFirstRender","useRef","useEffect","current","addPhysTask","getElementById","taskList","taskId","deletedTask","updatedTasks","filter","undefined","axios","delete","apiId","catch","error","handleConnectionError","bodyFound","find","remove","removePhysTask","updatedTask","setAngle","setVertices","setAngularVelocity","set","updatePhysTask","put","handleNotification","status","toast","href","autoClose","response","request","hideProgressBar","post","then","data","roomTaskData","get","success","is_completed","setTimeout","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a1d0dde7.chunk.js","sourcesContent":["var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgReload(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 62,\n    height: 62,\n    viewBox: \"0 0 62 62\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.1516 42.3035L53.5831 60.2848C53.3719 61.759 51.56 62.3716 50.5002 61.3118L46.7591 57.5708C41.9484 60.4728 36.4869 62 30.8709 62C13.9822 62 0.422952 48.7814 0.000818706 31.9069C-0.0221891 30.9845 0.648307 30.1934 1.56002 30.0621L8.8185 29.0245C9.9006 28.8666 10.9072 29.7162 10.8922 30.8479C10.7417 41.9849 19.7368 51.1016 30.8709 51.1016C33.567 51.1016 36.2313 50.5535 38.6935 49.5052L35.0874 45.899C34.0342 44.8459 34.6319 43.0284 36.1144 42.8161L54.0957 40.2476C55.2805 40.069 56.3215 41.0993 56.1516 42.3035Z\",\n    fill: \"#CEFDD0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.4399 31.7978L53.1868 32.8337C52.2497 32.9524 51.1132 32.1494 51.1132 30.8789C51.1132 19.8617 42.1499 10.8984 31.1327 10.8984C28.4507 10.8984 25.7987 11.4412 23.3456 12.4789L26.8365 15.9698C27.8897 17.023 27.292 18.8405 25.8095 19.0528L7.82819 21.6231C6.64716 21.7918 5.60127 20.779 5.77226 19.5672L8.34066 1.58571C8.55209 0.109943 10.3624 -0.49855 11.4236 0.55872L15.2551 4.38843C20.0427 1.51306 25.5007 -7.62939e-06 31.1327 -7.62939e-06C47.9398 -7.62939e-06 61.4972 13.153 61.9991 29.9441C62.0258 30.8682 61.3553 31.6665 60.4399 31.7978Z\",\n    fill: \"#CEFDD0\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 62,\n    height: 62,\n    fill: \"white\",\n    transform: \"matrix(1 0 0 -1 0 62)\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgReload);\nexport default __webpack_public_path__ + \"static/media/reload.bed4546a.svg\";\nexport { ForwardRef as ReactComponent };","import Matter from \"matter-js\";\r\nimport MatterAttractors from \"matter-attractors\";\r\n\r\nMatter.use(MatterAttractors);\r\n\r\nconst PhyxList = {};\r\n\r\n// setup scaling variables\r\n\r\nPhyxList.renderScaleX = window.innerWidth / 500;\r\nPhyxList.renderScaleY = window.innerHeight / 500;\r\n\r\nPhyxList.scale = Math.min(PhyxList.renderScaleY, PhyxList.renderScaleX);\r\n\r\nPhyxList.width = window.innerWidth / PhyxList.scale;\r\nPhyxList.height = window.innerHeight / PhyxList.scale;\r\n\r\n/**\r\n * Initialize the physics engine, the rendering loop and mouse controls\r\n */\r\nexport function initPhysics() {\r\n    PhyxList.domTasks = [];\r\n    PhyxList.bodies = [];\r\n    // create an engine\r\n    PhyxList.engine = Matter.Engine.create({\r\n        positionIterations: 7,\r\n        velocityIterations: 7,\r\n    });\r\n\r\n    setupWorld();\r\n    setupMouse();\r\n    setupTasks();\r\n    // debugRenderer();\r\n\r\n    PhyxList.runner = Matter.Runner.create();\r\n    Matter.Runner.run(PhyxList.runner, PhyxList.engine);\r\n}\r\n\r\n// setup world geometry\r\nfunction setupWorld() {\r\n    const ground = Matter.Bodies.rectangle(\r\n        PhyxList.width / 2,\r\n        PhyxList.height,\r\n        PhyxList.width,\r\n        60,\r\n        {\r\n            isStatic: true,\r\n            friction: 1,\r\n            collisionFilter: { group: -1, mask: 1 },\r\n        }\r\n    );\r\n    const groundLower = Matter.Bodies.rectangle(\r\n        PhyxList.width / 2,\r\n        PhyxList.height * 3,\r\n        2000,\r\n        240,\r\n        {\r\n            isStatic: true,\r\n            friction: 1,\r\n        }\r\n    );\r\n    const rightWall = Matter.Bodies.rectangle(\r\n        PhyxList.width,\r\n        PhyxList.height / 2,\r\n        60,\r\n        2000,\r\n        {\r\n            isStatic: true,\r\n            friction: 1,\r\n        }\r\n    );\r\n    const leftWall = Matter.Bodies.rectangle(0, PhyxList.height / 2, 60, 2000, {\r\n        isStatic: true,\r\n        friction: 1,\r\n    });\r\n\r\n    const completedAttractor = Matter.Bodies.circle(\r\n        PhyxList.width / 2,\r\n        PhyxList.height * 1.5,\r\n        5,\r\n        {\r\n            isStatic: true,\r\n            friction: 1,\r\n            collisionFilter: { group: -1, mask: 1 },\r\n            plugin: {\r\n                attractors: [\r\n                    function (bodyA, bodyB) {\r\n                        if (\r\n                            !Matter.Detector.canCollide(\r\n                                bodyA.collisionFilter,\r\n                                bodyB.collisionFilter\r\n                            )\r\n                        ) {\r\n                            return {\r\n                                x:\r\n                                    (bodyA.position.x - bodyB.position.x) *\r\n                                    0.00001,\r\n                                y:\r\n                                    (bodyA.position.y - bodyB.position.y) *\r\n                                    0.00001,\r\n                            };\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    },\r\n                ],\r\n            },\r\n        }\r\n    );\r\n\r\n    const completedCollider = Matter.Bodies.circle(\r\n        PhyxList.width / 2,\r\n        PhyxList.height * 1.5,\r\n        60,\r\n        {\r\n            isStatic: true,\r\n            friction: 1,\r\n        }\r\n    );\r\n\r\n    Matter.Events.on(PhyxList.engine, \"afterUpdate\", () => {\r\n        let time = PhyxList.engine.timing.timestamp;\r\n        Matter.Body.translate(completedAttractor, {\r\n            x: Math.sin(time * 0.001 + 1.5) * 1,\r\n            y: Math.cos(time * 0.001 + 1.5) * 1,\r\n        });\r\n        Matter.Body.translate(completedCollider, {\r\n            x: Math.sin(time * 0.001 + 1.5) * 4,\r\n            y: 0,\r\n        });\r\n    });\r\n\r\n    // add all of the bodies to the world\r\n    Matter.Composite.add(PhyxList.engine.world, [\r\n        ground,\r\n        leftWall,\r\n        rightWall,\r\n        groundLower,\r\n        completedAttractor,\r\n        completedCollider,\r\n    ]);\r\n}\r\n\r\n// setup mouse interactivity\r\nfunction setupMouse() {\r\n    let mouseObj = Matter.Mouse.create(document.querySelector(\"#root\"));\r\n\r\n    PhyxList.mouse = mouseObj;\r\n\r\n    let scale = Matter.Vector.create(1 / PhyxList.scale, 1 / PhyxList.scale);\r\n    Matter.Mouse.setScale(mouseObj, scale);\r\n    let mouseConstraint = Matter.MouseConstraint.create(PhyxList.engine, {\r\n        mouse: mouseObj,\r\n        constraint: {\r\n            // allow bodies on mouse to rotate\r\n            angularStiffness: 0.1,\r\n            stiffness: 0.01,\r\n            damping: 0.1,\r\n            render: {\r\n                visible: true,\r\n            },\r\n        },\r\n    });\r\n\r\n    PhyxList.mouseConstraint = mouseConstraint;\r\n\r\n    Matter.Composite.add(PhyxList.engine.world, mouseConstraint);\r\n\r\n    document.querySelector(\"#root\").addEventListener(\"mousedown\", (e) => {\r\n        e.button == 2 ? (mouseObj.button = 0) : (mouseObj.button = -1);\r\n    });\r\n\r\n    window.addEventListener(\"contextmenu\", (e) => {\r\n        e.preventDefault();\r\n    });\r\n}\r\n\r\n// add all inital tasks as physics bodies and setup a loop for updating dom elements positions\r\nfunction setupTasks() {\r\n    window.onload = () => {\r\n        refreshTasks();\r\n    };\r\n\r\n    // rendering loop, go over each task, and update its position according to its physics body in simulation\r\n    window.requestAnimationFrame(update);\r\n    function update() {\r\n        PhyxList.domTasks.forEach((task) => {\r\n            var bodyDom = task;\r\n            var body = null;\r\n\r\n            // find the correct physics body\r\n            PhyxList.bodies.some((PhysBody) => {\r\n                if (PhysBody.id == bodyDom.id) {\r\n                    body = PhysBody;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n\r\n            if (body === null) return;\r\n\r\n            // set position styles for the task\r\n            bodyDom.style.transform =\r\n                \"translate( \" +\r\n                Math.floor(\r\n                    body.position.x * PhyxList.scale - bodyDom.offsetWidth / 2\r\n                ) +\r\n                \"px, \" +\r\n                Math.floor(\r\n                    body.position.y * PhyxList.scale - bodyDom.offsetHeight / 2\r\n                ) +\r\n                \"px )\" +\r\n                \"rotate( \" +\r\n                body.angle.toFixed(3) +\r\n                \"rad )\";\r\n        });\r\n        window.requestAnimationFrame(update);\r\n    }\r\n}\r\n\r\n// render a canvas element with options for debugging\r\nfunction debugRenderer() {\r\n    // create a renderer\r\n    PhyxList.render = Matter.Render.create({\r\n        element: document.body,\r\n        engine: PhyxList.engine,\r\n        options: {\r\n            showMousePosition: true,\r\n            wireframes: false,\r\n            showDebug: true,\r\n            width: PhyxList.width,\r\n            height: PhyxList.height,\r\n        },\r\n    });\r\n\r\n    PhyxList.render.canvas.style.position = \"absolute\";\r\n    PhyxList.render.canvas.style.top = \"0\";\r\n\r\n    PhyxList.render.mouse = PhyxList.mouse;\r\n\r\n    Matter.Render.run(PhyxList.render);\r\n}\r\n\r\n/**\r\n * Removes physics body with given taskid\r\n *\r\n * @param {number} taskId\r\n */\r\nexport function removeTask(taskId) {\r\n    let bodyFound = PhyxList.bodies.find((body) => body.id === taskId);\r\n    if (bodyFound) {\r\n        PhyxList.bodies = PhyxList.bodies.filter((body) => body.id !== taskId);\r\n        PhyxList.domTasks = document.querySelectorAll(\".Task\");\r\n        Matter.Composite.remove(PhyxList.engine.world, bodyFound);\r\n    }\r\n}\r\n\r\n/**\r\n * Updates physics body with given taskid\r\n *\r\n * @param {number} taskId\r\n */\r\nexport function updateTask(taskId, isCompleted) {\r\n    let bodyFound = PhyxList.bodies.find((body) => {\r\n        return body.id === taskId;\r\n    });\r\n    if (bodyFound) {\r\n        if (isCompleted) {\r\n            Matter.Body.setAngle(bodyFound, 0);\r\n            Matter.Body.setVertices(bodyFound, PhyxList.completedVerts);\r\n            Matter.Body.setAngularVelocity(bodyFound, 0);\r\n\r\n            bodyFound.friction = 0.001;\r\n\r\n            Matter.Body.set(bodyFound, {\r\n                collisionFilter: {\r\n                    ...bodyFound.collisionFilter,\r\n                    category: 2,\r\n                },\r\n            });\r\n        } else {\r\n            Matter.Body.setAngle(bodyFound, 0);\r\n            Matter.Body.setVertices(bodyFound, bodyFound.oldVerts);\r\n            Matter.Body.setAngularVelocity(bodyFound, 0);\r\n\r\n            bodyFound.friction = 1;\r\n\r\n            Matter.Body.set(bodyFound, {\r\n                collisionFilter: {\r\n                    ...bodyFound.collisionFilter,\r\n                    category: 1,\r\n                },\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Adds a physics body implementation of a task\r\n *\r\n * @param {object} task\r\n */\r\nexport function addTask(task) {\r\n    // get dom references to all tasks, including new ones\r\n    PhyxList.domTasks = document.querySelectorAll(\".Task\");\r\n\r\n    let body = Matter.Bodies.rectangle(\r\n        PhyxList.width / 2,\r\n        PhyxList.height / 2,\r\n        (PhyxList.width * task.offsetWidth) / window.innerWidth,\r\n        (PhyxList.height * task.offsetHeight) / window.innerHeight\r\n    );\r\n\r\n    body.oldVerts = body.vertices.map((vert) => {\r\n        return { x: vert.x, y: vert.y };\r\n    });\r\n\r\n    body.friction = 1;\r\n    body.frictionStatic = 1;\r\n    // get react assigned id, store for refrence\r\n    body.id = task.getAttribute(\"data-id\");\r\n    PhyxList.bodies.push(body);\r\n\r\n    Matter.Composite.add(PhyxList.engine.world, body);\r\n}\r\n/**\r\n * Removes all physics bodies, and replaces them with current .Task dom elements\r\n */\r\nexport function refreshTasks() {\r\n    PhyxList.domTasks = document.querySelectorAll(\".Task\");\r\n\r\n    // remove all physics bodies/constraints. Clear the engine to prevent old collision info to interfere\r\n    Matter.Composite.clear(PhyxList.engine.world, true, true);\r\n    Matter.Engine.clear(PhyxList.engine);\r\n    // re-add mouse constaint for control\r\n    Matter.Composite.add(PhyxList.engine.world, PhyxList.mouseConstraint);\r\n\r\n    PhyxList.bodies = [];\r\n\r\n    let i = 0;\r\n\r\n    // for each task found in DOM create a physics body, with same id\r\n    PhyxList.domTasks.forEach((task) => {\r\n        const isCompleted = task.getAttribute(\"data-isCompleted\") === \"true\";\r\n\r\n        const x = PhyxList.width / 2;\r\n        const y = isCompleted ? PhyxList.height : i + PhyxList.height * -2;\r\n\r\n        let body = Matter.Bodies.rectangle(\r\n            x,\r\n            y,\r\n            (PhyxList.width * task.offsetWidth) / window.innerWidth,\r\n            (PhyxList.height * task.offsetHeight) / window.innerHeight\r\n        );\r\n\r\n        body.oldVerts = body.vertices.map((vert) => {\r\n            return { x: vert.x, y: vert.y };\r\n        });\r\n        body.friction = 1;\r\n\r\n        if (isCompleted) {\r\n            body.collisionFilter.category = 2;\r\n            body.frictionAir = 0.05;\r\n            body.force.x += Math.random() * 0.1 - 0.05;\r\n            body.force.y += Math.random() * 0.1 - 0.05;\r\n\r\n            body.friction = 0;\r\n\r\n            PhyxList.completedVerts = body.vertices.map((vert) => {\r\n                return { x: vert.x, y: vert.y };\r\n            });\r\n\r\n            body.density = 0.1;\r\n        }\r\n\r\n        body.frictionStatic = 1;\r\n        // get react assigned id, store for refrence\r\n        body.id = task.getAttribute(\"data-id\");\r\n        body.isCompleted = isCompleted;\r\n\r\n        i++;\r\n\r\n        PhyxList.bodies.push(body);\r\n    });\r\n    Matter.Composite.add(PhyxList.engine.world, PhyxList.bodies);\r\n}\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCheckMark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 28,\n    height: 22,\n    viewBox: \"0 0 28 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.9 3L10 19.5L3 12.1275\",\n    stroke: \"#2DBA33\",\n    strokeWidth: 5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckMark);\nexport default __webpack_public_path__ + \"static/media/checkMark.83b9e867.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgClose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 16C3.57844 16 0 12.4219 0 8C0 3.57844 3.57812 0 8 0C12.4216 0 16 3.57812 16 8C16 12.4216 12.4219 16 8 16ZM7.61613 6.08134L5.79984 4.26472C5.59469 4.05994 5.32225 3.94703 5.03244 3.94703C4.43256 3.94703 3.947 4.43222 3.947 5.03247C3.947 5.32228 4.05988 5.59472 4.26469 5.79988L6.08131 7.61616C6.29334 7.82816 6.29334 8.17188 6.08131 8.38391L4.26469 10.2002C4.05991 10.4053 3.947 10.6778 3.947 10.9676C3.947 11.5675 4.43219 12.053 5.03244 12.053C5.32225 12.053 5.59469 11.9401 5.79984 11.7353L7.61613 9.91872C7.82816 9.70706 8.17188 9.70706 8.38387 9.91872L10.2002 11.7353C10.4053 11.9401 10.6778 12.053 10.9676 12.053C11.5674 12.053 12.053 11.5678 12.053 10.9676C12.053 10.6778 11.9401 10.4053 11.7353 10.2002L9.91869 8.38391C9.70666 8.17191 9.70666 7.82819 9.91869 7.61616L11.7353 5.79988C11.9401 5.59472 12.053 5.32228 12.053 5.03247C12.053 4.43259 11.5678 3.94703 10.9676 3.94703C10.6778 3.94703 10.4053 4.05994 10.2002 4.26472L8.38387 6.08134C8.17188 6.29334 7.82812 6.293 7.61613 6.08134Z\",\n    fill: \"#C80000\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClose);\nexport default __webpack_public_path__ + \"static/media/close.d069f47d.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\n\r\nimport { ReactComponent as CheckMark } from \"../svgs/checkMark.svg\";\r\nimport { ReactComponent as CloseSvg } from \"../svgs/close.svg\";\r\n\r\nexport default function Task(props) {\r\n    const classNames = props.isCompleted ? \"Task completed\" : \"Task\";\r\n\r\n    const [randomColor, setRandomColor] = useState(() => {\r\n        let hue = Math.floor(Math.random() * (36 - 0 + 1)) * 10;\r\n        return `hsl(${hue}, 62%, 50%)`;\r\n    });\r\n\r\n    return (\r\n        <div\r\n            id={props.id}\r\n            data-id={props.id}\r\n            data-iscompleted={props.isCompleted}\r\n            className={classNames}\r\n        >\r\n            <div\r\n                className=\"closeContainer\"\r\n                onClick={() => props.deleteTask(props.id)}\r\n            >\r\n                <CloseSvg />\r\n            </div>\r\n\r\n            <div className=\"checkContainer\" style={{ background: randomColor }}>\r\n                <div\r\n                    className=\"checkBox\"\r\n                    onMouseDown={(e) => {\r\n                        if (e.button === 0) {\r\n                            props.updateTask(props.id);\r\n                        }\r\n                    }}\r\n                >\r\n                    <CheckMark />\r\n                </div>\r\n            </div>\r\n            <div className=\"infoContainer\">\r\n                <h2>{props.name}</h2>\r\n                <p>{props.description}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TaskForm(props) {\r\n    const [task, setTask] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n    });\r\n\r\n    function handleChange(e) {\r\n        let value = e.target.value;\r\n        let key = e.target.name;\r\n        setTask((pervState) => {\r\n            return { ...pervState, [key]: value };\r\n        });\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.addTask(task);\r\n        setTask({\r\n            name: \"\",\r\n            description: \"\",\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form className=\"Form\" onSubmit={handleSubmit}>\r\n            <div className=\"input-area\">\r\n                <label>Nazwa zadania</label>\r\n                <input\r\n                    required={true}\r\n                    type=\"text\"\r\n                    maxLength=\"100\"\r\n                    autoComplete=\"off\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    onChange={handleChange}\r\n                    value={task.name}\r\n                />\r\n                <label>Opis zadania</label>\r\n                <input\r\n                    type=\"text\"\r\n                    maxLength=\"600\"\r\n                    autoComplete=\"off\"\r\n                    name=\"description\"\r\n                    id=\"description\"\r\n                    onChange={handleChange}\r\n                    value={task.description}\r\n                />\r\n                <button type=\"submit\">Dodaj zadanie !</button>\r\n            </div>\r\n            <div className=\"bookmark\"></div>\r\n        </form>\r\n    );\r\n}\r\n","import { nanoid } from \"nanoid\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function RoomForm(props) {\r\n    const [roomKey, setRoomKey] = useState(\"room-\" + nanoid());\r\n\r\n    const [submitAvalible, setSubmitAvalible] = useState(true);\r\n\r\n    // accept roomkeys in both formats room-|roomkey| or |roomkey|\r\n    function handleChange(e) {\r\n        setSubmitAvalible(false);\r\n        const ident = e.target.value.startsWith(\"room-\")\r\n            ? e.target.value.slice(5)\r\n            : e.target.value;\r\n        if (ident === \"\") {\r\n            setSubmitAvalible(true);\r\n            setRoomKey(\"room-\" + nanoid());\r\n        } else if (ident.length >= 5) {\r\n            setSubmitAvalible(true);\r\n            setRoomKey(\"room-\" + ident);\r\n        }\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (submitAvalible) {\r\n            props.downloadRoomTasks(roomKey);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"Form room\" onSubmit={handleSubmit}>\r\n            <div className=\"input-area\">\r\n                <label>Klucz pokoju</label>\r\n                <input\r\n                    type=\"text\"\r\n                    maxLength=\"100\"\r\n                    autoComplete=\"off\"\r\n                    title=\"Klucz pokoju - min 5 znaków\"\r\n                    name=\"roomKey\"\r\n                    id=\"roomKey\"\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <button disabled={!submitAvalible} type=\"submit\">\r\n                    Dołącz!\r\n                </button>\r\n            </div>\r\n            <div className=\"bookmark\"></div>\r\n        </form>\r\n    );\r\n}\r\n","import \"./App.css\";\r\nimport { ReactComponent as ReloadSvg } from \"./svgs/reload.svg\";\r\n// dependencies\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n    initPhysics,\r\n    removeTask as removePhysTask,\r\n    addTask as addPhysTask,\r\n    refreshTasks,\r\n    updateTask as updatePhysTask,\r\n} from \"./list/phyxList\";\r\nimport { nanoid } from \"nanoid\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n// components\r\nimport Task from \"./components/Task\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport RoomForm from \"./components/RoomForm\";\r\n\r\nfunction App() {\r\n    const taskData = [\r\n        {\r\n            id: nanoid(),\r\n            name: \"Witaj w PhyxList!\",\r\n            description:\r\n                \"PhyxList to lista zadań napędzana silnikiem fizyki matter.js\",\r\n            isCompleted: false,\r\n        },\r\n        {\r\n            id: nanoid(),\r\n            name: \"Pokoje\",\r\n            description:\r\n                \"Aby zapisywać swoje zadania możesz dołączyć do unikalnego pokoju, który wygenerujesz, bądź dołączyć do pokoju swoich znajomych :)\",\r\n            isCompleted: false,\r\n        },\r\n        {\r\n            id: nanoid(),\r\n            name: \"Zadania\",\r\n            description:\r\n                \"Zadania są odzwierciedlone w silniku fizycznym, a więc, można nimi manipulować!\",\r\n            isCompleted: false,\r\n        },\r\n        {\r\n            id: nanoid(),\r\n            name: \"Zadania - Instrukcja\",\r\n            description:\r\n                \"Przytrzymaj prawy przycisk myszy nad zadaniem i przestaw je gdzie uważasz\",\r\n            isCompleted: false,\r\n        },\r\n        {\r\n            id: nanoid(),\r\n            name: \"Autor\",\r\n            description: \"APP & API : Eryk Kleczewski ekkleczewski@gmail.com\",\r\n            isCompleted: false,\r\n        },\r\n        {\r\n            id: nanoid(),\r\n            name: \"Hej :)\",\r\n            description: \"Miło, że tu zaglądasz\",\r\n            isCompleted: true,\r\n        },\r\n    ];\r\n\r\n    const [tasks, setTasks] = useState(taskData);\r\n    const [newTask, setNewTask] = useState(null);\r\n    const [roomKey, setRoomKey] = useState(null);\r\n\r\n    let isFirstRender = useRef(true);\r\n\r\n    useEffect(() => {\r\n        initPhysics();\r\n        refreshTasks();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isFirstRender.current) {\r\n            isFirstRender.current = false;\r\n            return;\r\n        }\r\n\r\n        const DOMRef = document.getElementById(newTask.id);\r\n        addPhysTask(DOMRef);\r\n    }, [newTask]);\r\n\r\n    const taskList = tasks.map((task) => {\r\n        return (\r\n            <Task\r\n                key={task.id}\r\n                id={task.id}\r\n                name={task.name}\r\n                description={task.description}\r\n                isCompleted={task.isCompleted}\r\n                deleteTask={deleteTask}\r\n                updateTask={updateTask}\r\n            />\r\n        );\r\n    });\r\n\r\n    function deleteTask(taskId) {\r\n        let deletedTask = null;\r\n        const updatedTasks = tasks.filter((task) => {\r\n            if (taskId != task.id) {\r\n                return true;\r\n            } else {\r\n                deletedTask = task;\r\n                return false;\r\n            }\r\n        });\r\n        if (roomKey != null || roomKey != undefined) {\r\n            axios\r\n                .delete(\r\n                    \"https://phyxlist.herokuapp.com/api/room/\" +\r\n                        roomKey +\r\n                        \"/tasks/\" +\r\n                        deletedTask.apiId\r\n                )\r\n                .catch(function (error) {\r\n                    // handle error\r\n                    handleConnectionError(error);\r\n                });\r\n        }\r\n\r\n        removePhysTask(taskId);\r\n\r\n        setTasks(updatedTasks);\r\n    }\r\n\r\n    function addTask(task) {\r\n        let newTask = {\r\n            id: nanoid(),\r\n            name: task.name,\r\n            description: task.description,\r\n            isCompleted: false,\r\n        };\r\n\r\n        if (roomKey != null || roomKey != undefined) {\r\n            axios\r\n                .post(\r\n                    \"https://phyxlist.herokuapp.com/api/room/\" +\r\n                        roomKey +\r\n                        \"/tasks\",\r\n                    newTask\r\n                )\r\n                .then(function (response) {\r\n                    newTask.apiId = response.data.id;\r\n                })\r\n                .catch(function (error) {\r\n                    // handle error\r\n                    handleConnectionError(error);\r\n                });\r\n        }\r\n\r\n        const updatedTasks = [...tasks, newTask];\r\n        setTasks(updatedTasks);\r\n        setNewTask(newTask);\r\n    }\r\n\r\n    function updateTask(taskId) {\r\n        let updatedTask = null;\r\n        const updatedTasks = tasks.filter((task) => {\r\n            if (taskId == task.id) {\r\n                task.isCompleted = !task.isCompleted;\r\n                updatedTask = task;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        updatePhysTask(taskId, updatedTask.isCompleted);\r\n\r\n        if (roomKey != null || roomKey != undefined) {\r\n            axios\r\n                .put(\r\n                    \"https://phyxlist.herokuapp.com/api/room/\" +\r\n                        roomKey +\r\n                        \"/tasks/\" +\r\n                        updatedTask.apiId +\r\n                        \"?isCompleted=\" +\r\n                        updatedTask.isCompleted\r\n                )\r\n                .catch(function (error) {\r\n                    // handle error\r\n                    handleConnectionError(error);\r\n                });\r\n        }\r\n\r\n        setTasks(updatedTasks);\r\n    }\r\n\r\n    function downloadRoomTasks(key) {\r\n        let roomTaskData = [];\r\n\r\n        setRoomKey(key);\r\n\r\n        axios\r\n            .get(\"https://phyxlist.herokuapp.com/api/room/\" + key + \"/tasks\")\r\n            .then(function (response) {\r\n                if (response.status === 201) {\r\n                    toast.success(\"⭐ Stworzono nowy pokoj o kluczu: \" + key);\r\n                }\r\n                if (response.status === 200) {\r\n                    toast.success(\"✔️ Dołączono do pokoju o kluczu: \" + key);\r\n                }\r\n                processData(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                handleConnectionError(error);\r\n            });\r\n\r\n        function processData(data) {\r\n            roomTaskData = data.map((task) => {\r\n                return {\r\n                    id: nanoid(),\r\n                    apiId: task.id,\r\n                    name: task.title,\r\n                    isCompleted: task.is_completed,\r\n                    description: task.description,\r\n                };\r\n            });\r\n            setTasks(roomTaskData);\r\n\r\n            setTimeout(() => {\r\n                refreshTasks();\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    function handleNotification(status) {\r\n        switch (status) {\r\n            case 429:\r\n                toast.error(\r\n                    <p>\r\n                        429 - Zwolnij kowboju. 🤠\r\n                        <br /> Serwery nie rosną na drzewach\r\n                    </p>\r\n                );\r\n                break;\r\n\r\n            case 404:\r\n                toast.error(\r\n                    <p>\r\n                        404 - Nie znaleziono. ❌\r\n                        <br /> Dany zasób nie istnieje\r\n                    </p>\r\n                );\r\n                break;\r\n\r\n            case 666:\r\n                toast.error(\r\n                    <p>\r\n                        Serwer nie odpowiada. ❌\r\n                        <br /> Bestia zebrała żniwa\r\n                        <br /> Wyślij zgłoszenie do:\r\n                        <br />\r\n                        <a href=\"mailto:ekkleczewski@gmail.com?subject=PhyxList serwer nie odpowiada\">\r\n                            ekkleczewski@gmail.com\r\n                        </a>\r\n                    </p>,\r\n                    {\r\n                        autoClose: false,\r\n                    }\r\n                );\r\n                break;\r\n\r\n            default:\r\n                toast.error(\r\n                    <p>\r\n                        {status} - Wystąpił błąd. 😠\r\n                        <br /> Serwer nie jest zadowolony\r\n                    </p>\r\n                );\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleConnectionError(error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            handleNotification(error.response.status);\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            handleNotification(666);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"roomKey\">{roomKey}</div>\r\n            <ToastContainer hideProgressBar />\r\n            <div className=\"refresh\" onClick={refreshTasks}>\r\n                <ReloadSvg />\r\n            </div>\r\n            <TaskForm addTask={addTask} />\r\n            <RoomForm downloadRoomTasks={downloadRoomTasks} />\r\n            {taskList}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}