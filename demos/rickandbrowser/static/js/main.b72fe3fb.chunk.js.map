{"version":3,"sources":["components/Sidebar.js","components/Card.js","components/CardsContainer.js","App.js","hooks/useFetchApi.js","index.js"],"names":["Sidebar","searchId","searchStatus","searchLocation","searchName","handleInput","handleSubmit","getRandomCharacters","className","onSubmit","type","value","name","placeholder","onChange","onClick","Card","image","id","status","origin","location","species","gender","style","backgroundImage","isAlive","colorName","color","styleStatus","CardsContainer","charactersData","useState","cards","setCards","useEffect","arrayCards","Array","isArray","results","map","character","key","App","setSearchId","preparedUrl","setPreparedUrl","setName","setSearchStatus","setCharactersData","submitedSearch","setSubmitedSearch","inProgress","setInProgress","endpoint","prepareUrl","url","checkInput","isLoading","setIsLoading","fetchedData","setfetchedData","fetch","then","res","ok","Error","json","data","catch","error","console","log","useFetchApi","target","tname","event","preventDefault","randomPage","Math","floor","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAyEeA,MAnEf,YAOI,IANAC,EAMD,EANCA,SACgBC,EAKjB,EALCC,eACAC,EAID,EAJCA,WACAC,EAGD,EAHCA,YACAC,EAED,EAFCA,aACAC,EACD,EADCA,oBAEA,OACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,kBACX,8CACA,iDAGJ,yBAAKA,UAAU,kBACX,0BAAMA,UAAU,YAAYC,SAAUH,GAClC,2BACII,KAAK,SACLC,MAAOV,EACPW,KAAK,WACLC,YAAY,eACZC,SAAUT,IAEd,4BAAQK,KAAK,UAAb,eAGJ,0BAAMF,UAAU,YAAYC,SAAUH,GAClC,2BACII,KAAK,OACLC,MAAOP,EACPQ,KAAK,aACLC,YAAY,iBACZC,SAAUT,IAEd,4BAAQK,KAAK,UAAb,iBAGJ,0BAAMF,UAAU,YAAYC,SAAUH,GAClC,2BACII,KAAK,OACLC,MAAOT,EACPU,KAAK,iBACLC,YAAY,mBACZC,SAAUT,IAEd,4BAAQK,KAAK,UAAb,oBAIR,4BAAQF,UAAU,iBAAiBO,QAASR,GAA5C,yBAIA,yBAAKC,UAAU,mBACX,8BACI,qCACA,6CAEJ,8BACI,qCACA,kD,YC/DL,SAASQ,EAAT,GASX,IARAJ,EAQD,EARCA,KACAK,EAOD,EAPCA,MACAC,EAMD,EANCA,GACAC,EAKD,EALCA,OACAC,EAID,EAJCA,OACAC,EAGD,EAHCA,SACAC,EAED,EAFCA,QACAC,EACD,EADCA,OAaA,OACI,yBAAKf,UAAU,QACX,yBACIA,UAAU,aACVgB,MAAO,CAAEC,gBAAiB,OAASR,EAAQ,MAE3C,4BAAKL,IAET,yBAAKJ,UAAU,WACX,kCAAQU,IAEZ,yBAAKV,UAAU,eACX,4BACI,4BACI,0BAAMA,UAAU,wBAAhB,WACA,0BACIA,UAAU,mBACVgB,MA5BN,SAACE,GACf,IAAIC,EAAY,QAOhB,MANgB,SAAZD,EACAC,EAAY,MACO,UAAZD,IACPC,EAAY,SAGT,CAAEC,MAAOD,GAoBWE,CAAYV,IAElBA,IAGT,4BACI,0BAAMX,UAAU,wBAAhB,WACA,0BAAMA,UAAU,oBAAoBY,IAGxC,4BACI,0BAAMZ,UAAU,wBAAhB,aACA,0BAAMA,UAAU,oBAAoBc,IAExC,4BACI,0BAAMd,UAAU,wBAAhB,WACA,0BAAMA,UAAU,oBAAoBe,IAExC,4BACI,0BAAMf,UAAU,wBAAhB,aACA,0BAAMA,UAAU,oBAAoBa,OCvD7C,SAASS,EAAT,GAA6C,IAAnBC,EAAkB,EAAlBA,eAAkB,EAC7BC,mBAAS,IADoB,mBAChDC,EADgD,KACzCC,EADyC,KA6CvD,OAzCAC,qBAAU,WACN,IAAIC,EACAL,IAEIM,MAAMC,QAAQP,EAAeQ,UACA,MAA7BR,EAAeQ,QAAQ,GAEvBH,EAAaL,EAAeQ,QAAQC,KAAI,SAACC,GACrC,OACI,kBAAC,EAAD,CACIC,IAAKD,EAAUvB,GACfA,GAAIuB,EAAUvB,GACdN,KAAM6B,EAAU7B,KAChBK,MAAOwB,EAAUxB,MACjBE,OAAQsB,EAAUtB,OAClBG,QAASmB,EAAUnB,QACnBC,OAAQkB,EAAUlB,OAClBF,SAAUoB,EAAUpB,SAAST,KAC7BQ,OAAQqB,EAAUrB,OAAOR,UAIT,MAArBmB,EAAeb,KACtBkB,EACI,kBAAC,EAAD,CACIM,IAAKX,EAAeb,GACpBA,GAAIa,EAAeb,GACnBN,KAAMmB,EAAenB,KACrBK,MAAOc,EAAed,MACtBE,OAAQY,EAAeZ,OACvBG,QAASS,EAAeT,QACxBC,OAAQQ,EAAeR,OACvBF,SAAUU,EAAeV,SAAST,KAClCQ,OAAQW,EAAeX,OAAOR,SAK9CsB,EAASE,KACV,CAACL,IAEG,yBAAKvB,UAAU,kBAAkByB,GCoE7BU,MAjHf,WAAgB,IAAD,EACqBX,mBAAS,IAD9B,mBACJ/B,EADI,KACM2C,EADN,OAE2BZ,mBAAS,IAFpC,mBAEJa,EAFI,KAESC,EAFT,OAGmBd,mBAAS,IAH5B,mBAGJ5B,EAHI,KAGQ2C,EAHR,OAI6Bf,mBAAS,IAJtC,mBAIJ9B,EAJI,KAIU8C,EAJV,OAKiChB,mBAAS,IAL1C,mBAKJD,EALI,KAKYkB,EALZ,OAOiCjB,oBAAS,GAP1C,mBAOJkB,EAPI,KAOYC,EAPZ,OAQyBnB,oBAAS,GARlC,mBAQJoB,EARI,KAQQC,EARR,KAwDXlB,qBAAU,YAGV,WACI,IAAImB,EAAW,6CACXrD,EAEA6C,EADAQ,GAAsBrD,GAEfG,EAEP0C,EADAQ,EAAWA,EAAW,SAAWlD,GAE1BF,GAEP4C,EADAQ,EAAWA,EAAW,WAAapD,GAXvCqD,KACD,CAACtD,EAAUG,EAAYF,IA1Df,MCLY,SAACsD,EAAKC,GAAgB,IAAD,EACVzB,oBAAS,GADC,mBACrC0B,EADqC,KAC1BC,EAD0B,OAEN3B,mBAAS,MAFH,mBAErC4B,EAFqC,KAExBC,EAFwB,KAsB5C,OAlBA1B,qBAAU,WACNwB,GAAa,GAEbG,MAAMN,GACDO,MAAK,SAACC,GACH,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAM,4BAC7B,OAAOF,EAAIG,UAEdJ,MAAK,SAACK,GACHP,EAAeO,GACfT,GAAa,MAEhBU,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZX,GAAa,QAEtB,CAACF,IAEG,CAACG,EAAaF,GDyDCe,CAAY5B,EAAaK,GAAxCU,EA1EI,oBA8FX,OAjBAzB,qBAAU,WACFyB,GAEAhB,EAAY,IACZG,EAAQ,IACRC,EAAgB,IAChBG,GAAkB,GAElBF,EAAkBW,GAElBP,GAAc,KAEdF,GAAkB,GAClBE,GAAc,MAEnB,CAACO,IAGA,yBAAKpD,UAAU,OACX,kBAAC,EAAD,CACIP,SAAUA,EACVG,WAAYA,EACZD,eAAgBD,EAChBG,YAzFZ,YAAmC,IAAXqE,EAAU,EAAVA,OACpB,OAAQA,EAAO9D,MACX,IAAK,WACDgC,EAAY8B,EAAO/D,OACnB,MACJ,IAAK,aACDoC,EAAQ2B,EAAO/D,OACf,MACJ,IAAK,iBACDqC,EAAgB0B,EAAO/D,OACvB,MAEJ,QACI4D,QAAQC,IACJ,+BACIE,EAAOC,MACP,cACAD,EAAO/D,OAIvB4D,QAAQC,IAAI,WAAYvE,IAqEhBK,aAjEZ,SAAsBsE,GAClBA,EAAMC,iBAIN1B,GAAkB,GAClBE,GAAc,IA4DN9C,oBAzDZ,WACI,IAAIuE,EAAaC,KAAKC,MAAsB,GAAhBD,KAAKE,UAIjCnC,EAFI,mDAAqDgC,GAGzD3B,GAAkB,GAClBE,GAAc,MAoDTD,EACG,yBAAK5C,UAAU,kBAAf,8BAEA,kBAAC,EAAD,CAAgBuB,eAAgBA,ME7GhDmD,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.b72fe3fb.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Sidebar.css\";\n\n// import InputForm from \"./InputForm\"; Maybe for later use\n\nfunction Sidebar({\n    searchId,\n    searchLocation: searchStatus,\n    searchName,\n    handleInput,\n    handleSubmit,\n    getRandomCharacters,\n}) {\n    return (\n        <div className=\"Sidebar\">\n            <div className=\"Sidebar-header\">\n                <h1>RICK AND MORTY</h1>\n                <h2>Character status</h2>\n            </div>\n\n            <div className=\"Sidebar-inputs\">\n                <form className=\"InputForm\" onSubmit={handleSubmit}>\n                    <input\n                        type=\"number\"\n                        value={searchId}\n                        name=\"searchId\"\n                        placeholder=\"Search by ID\"\n                        onChange={handleInput}\n                    />\n                    <button type=\"submit\">Get by: ID</button>\n                </form>\n\n                <form className=\"InputForm\" onSubmit={handleSubmit}>\n                    <input\n                        type=\"text\"\n                        value={searchName}\n                        name=\"searchName\"\n                        placeholder=\"Search by Name\"\n                        onChange={handleInput}\n                    />\n                    <button type=\"submit\">Get by: Name</button>\n                </form>\n\n                <form className=\"InputForm\" onSubmit={handleSubmit}>\n                    <input\n                        type=\"text\"\n                        value={searchStatus}\n                        name=\"searchLocation\"\n                        placeholder=\"Search by Status\"\n                        onChange={handleInput}\n                    />\n                    <button type=\"submit\">Get by: Status</button>\n                </form>\n            </div>\n\n            <button className=\"Sidebar-random\" onClick={getRandomCharacters}>\n                Get random characters\n            </button>\n\n            <div className=\"Sidebar-credits\">\n                <span>\n                    <p>API by</p>\n                    <p>Axel Fuhrmann</p>\n                </span>\n                <span>\n                    <p>APP by</p>\n                    <p>Eryk Kleczewski</p>\n                </span>\n            </div>\n        </div>\n    );\n}\nexport default Sidebar;\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nexport default function Card({\r\n    name,\r\n    image,\r\n    id,\r\n    status,\r\n    origin,\r\n    location,\r\n    species,\r\n    gender,\r\n}) {\r\n    let styleStatus = (isAlive) => {\r\n        let colorName = \"white\";\r\n        if (isAlive === \"Dead\") {\r\n            colorName = \"red\";\r\n        } else if (isAlive === \"Alive\") {\r\n            colorName = \"green\";\r\n        }\r\n\r\n        return { color: colorName };\r\n    };\r\n\r\n    return (\r\n        <div className=\"Card\">\r\n            <div\r\n                className=\"Card-image\"\r\n                style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            >\r\n                <h3>{name}</h3>\r\n            </div>\r\n            <div className=\"Card-id\">\r\n                <p>id: {id}</p>\r\n            </div>\r\n            <div className=\"Card-status\">\r\n                <ul>\r\n                    <li>\r\n                        <span className=\"Card-status-position\">Status:</span>\r\n                        <span\r\n                            className=\"Card-status-data\"\r\n                            style={styleStatus(status)}\r\n                        >\r\n                            {status}\r\n                        </span>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"Card-status-position\">Origin:</span>\r\n                        <span className=\"Card-status-data\">{origin}</span>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <span className=\"Card-status-position\">Spiecies:</span>\r\n                        <span className=\"Card-status-data\">{species}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"Card-status-position\">Gender:</span>\r\n                        <span className=\"Card-status-data\">{gender}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"Card-status-position\">Location:</span>\r\n                        <span className=\"Card-status-data\">{location}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./CardsContainer.css\";\r\n\r\nimport Card from \"./Card\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function CardsContainer({ charactersData }) {\r\n    const [cards, setCards] = useState(\"\");\r\n\r\n    // map is running multiple times\r\n    useEffect(() => {\r\n        let arrayCards;\r\n        if (charactersData) {\r\n            if (\r\n                Array.isArray(charactersData.results) &&\r\n                charactersData.results[0] != null\r\n            ) {\r\n                arrayCards = charactersData.results.map((character) => {\r\n                    return (\r\n                        <Card\r\n                            key={character.id}\r\n                            id={character.id}\r\n                            name={character.name}\r\n                            image={character.image}\r\n                            status={character.status}\r\n                            species={character.species}\r\n                            gender={character.gender}\r\n                            location={character.location.name}\r\n                            origin={character.origin.name}\r\n                        />\r\n                    );\r\n                });\r\n            } else if (charactersData.id != null) {\r\n                arrayCards = (\r\n                    <Card\r\n                        key={charactersData.id}\r\n                        id={charactersData.id}\r\n                        name={charactersData.name}\r\n                        image={charactersData.image}\r\n                        status={charactersData.status}\r\n                        species={charactersData.species}\r\n                        gender={charactersData.gender}\r\n                        location={charactersData.location.name}\r\n                        origin={charactersData.origin.name}\r\n                    />\r\n                );\r\n            }\r\n        }\r\n        setCards(arrayCards);\r\n    }, [charactersData]);\r\n\r\n    return <div className=\"CardsContainer\">{cards}</div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { useFetchApi } from \"./hooks/useFetchApi\";\n\nimport \"./App.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport CardsContainer from \"./components/CardsContainer\";\n\nfunction App() {\n    const [searchId, setSearchId] = useState(\"\");\n    const [preparedUrl, setPreparedUrl] = useState(\"\");\n    const [searchName, setName] = useState(\"\");\n    const [searchStatus, setSearchStatus] = useState(\"\");\n    const [charactersData, setCharactersData] = useState(\"\");\n\n    const [submitedSearch, setSubmitedSearch] = useState(false);\n    const [inProgress, setInProgress] = useState(false);\n\n    // Handle changes of form, set state in app\n    function handleChange({ target }) {\n        switch (target.name) {\n            case \"searchId\":\n                setSearchId(target.value);\n                break;\n            case \"searchName\":\n                setName(target.value);\n                break;\n            case \"searchLocation\":\n                setSearchStatus(target.value);\n                break;\n\n            default:\n                console.log(\n                    \"Unnessecary change on name: \" +\n                        target.tname +\n                        \" || value: \" +\n                        target.value\n                );\n                break;\n        }\n        console.log(\"searchId\", searchId);\n    }\n\n    // Handle submit of form\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        // trigger fetch and update state\n\n        setSubmitedSearch(true);\n        setInProgress(true);\n    }\n\n    function getRandomCharacters() {\n        let randomPage = Math.floor(Math.random() * 26);\n        let endpoint =\n            \"https://rickandmortyapi.com/api/character/?page=\" + randomPage;\n\n        setPreparedUrl(endpoint);\n        setSubmitedSearch(true);\n        setInProgress(true);\n    }\n\n    // Prepare url for fetch\n    useEffect(() => {\n        prepareUrl();\n    }, [searchId, searchName, searchStatus]);\n    function prepareUrl() {\n        let endpoint = \"https://rickandmortyapi.com/api/character/\";\n        if (searchId) {\n            endpoint = endpoint + searchId;\n            setPreparedUrl(endpoint);\n        } else if (searchName) {\n            endpoint = endpoint + \"?name=\" + searchName;\n            setPreparedUrl(endpoint);\n        } else if (searchStatus) {\n            endpoint = endpoint + \"?status=\" + searchStatus;\n            setPreparedUrl(endpoint);\n        }\n    }\n\n    // Fetch data from Api\n    const [fetchedData] = useFetchApi(preparedUrl, submitedSearch);\n\n    // Update state with characters data\n    useEffect(() => {\n        if (fetchedData) {\n            // reset forms and triggering from setSubmitedSearch\n            setSearchId(\"\");\n            setName(\"\");\n            setSearchStatus(\"\");\n            setSubmitedSearch(false);\n\n            setCharactersData(fetchedData);\n\n            setInProgress(false);\n        } else {\n            setSubmitedSearch(false);\n            setInProgress(false);\n        }\n    }, [fetchedData]);\n\n    return (\n        <div className=\"App\">\n            <Sidebar\n                searchId={searchId}\n                searchName={searchName}\n                searchLocation={searchStatus}\n                handleInput={handleChange}\n                handleSubmit={handleSubmit}\n                getRandomCharacters={getRandomCharacters}\n            />\n            {inProgress ? (\n                <div className=\"CardsContainer\">Characters data loading...</div>\n            ) : (\n                <CardsContainer charactersData={charactersData} />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetchApi = (url, checkInput) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [fetchedData, setfetchedData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n\r\n        fetch(url)\r\n            .then((res) => {\r\n                if (!res.ok) throw new Error(\"Fetching resource failed\");\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                setfetchedData(data);\r\n                setIsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setIsLoading(false);\r\n            });\r\n    }, [checkInput]);\r\n\r\n    return [fetchedData, isLoading];\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}